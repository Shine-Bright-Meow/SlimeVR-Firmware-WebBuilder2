{"openapi":"3.0.0","servers":[{"url":"http://locahost:3000","description":"Main Server"}],"info":{"version":"0.0.1","title":"slimevr-firmware-server","description":"","license":{"name":"UNLICENSED"}},"components":{"schemas":{"VerionCheckResponse":{"type":"object","properties":{"success":{"type":"boolean"},"reason":{"type":"object","properties":{"message":{"type":"string"},"versions":{"type":"string"}},"required":["message","versions"]}},"required":["success"]},"FirmwareDTO":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"UUID of the firmware"},"releaseId":{"type":"string","title":"Id of the firmware version used","description":"Id of the firmware version used.\nUsually the commit id of the source\nused to build the firmware"},"buildStatus":{"type":"string","enum":["CREATING_BUILD_FOLDER","DOWNLOADING_FIRMWARE","EXTRACTING_FIRMWARE","SETTING_UP_DEFINES","BUILDING","SAVING","DONE","ERROR"],"description":"Current status of the build\nthis value will change during the build\nprocess\n\nBUILDING -> DONE \\\\ the firmwrare is build and ready\n         -> FAILED  \\\\ the build failled and will be garbage collected"},"buildVersion":{"type":"string","description":"The repository and branch used as source of the firmware"},"createdAt":{"type":"string","description":"The date of creation of this firmware build","format":"date-time"}},"required":["id","releaseId","buildStatus","buildVersion","createdAt"],"description":"Root object declaring a built firmware\nthis object contains:\n - the status of the build\n - the the repository and commit used as source"},"BuildResponseDTO":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Id of the firmware"},"status":{"type":"string","enum":["CREATING_BUILD_FOLDER","DOWNLOADING_FIRMWARE","EXTRACTING_FIRMWARE","SETTING_UP_DEFINES","BUILDING","SAVING","DONE","ERROR"],"description":"Build status of the firmware"},"firmwareFiles":{"type":"array","items":{"$ref":"#/components/schemas/FirmwareFileDTO"},"description":"List of built firmware files, only set if the build succeeded"}},"required":["id","status"]},"FirmwareFileDTO":{"type":"object","properties":{"url":{"type":"string","description":"Url to the file"},"offset":{"type":"number","description":"Address of the partition"},"isFirmware":{"type":"boolean","description":"Is this file the main firmware"},"firmwareId":{"type":"string","format":"uuid","description":"Id of the linked firmware"}},"required":["url","offset","isFirmware","firmwareId"]},"CreateBuildFirmwareDTO":{"type":"object","properties":{"version":{"type":"string","description":"Repository of the firmware used"},"boardConfig":{"$ref":"#/components/schemas/CreateBoardConfigDTO","description":"Board config, used to declare the pins used by the board"},"imusConfig":{"type":"array","items":{"$ref":"#/components/schemas/CreateImuConfigDTO"},"minItems":1,"description":"Imu config, list of all the imus used and their pins"}},"required":["version","boardConfig","imusConfig"]},"CreateBoardConfigDTO":{"type":"object","properties":{"type":{"type":"string","enum":["BOARD_SLIMEVR","BOARD_NODEMCU","BOARD_WROOM32","BOARD_WEMOSD1MINI","BOARD_TTGO_TBASE","BOARD_ESP01","BOARD_LOLIN_C3_MINI","BOARD_BEETLE32C3","BOARD_ESP32C3DEVKITM1","BOARD_WEMOSWROOM02","BOARD_XIAO_ESP32C3","BOARD_ESP32C6DEVKITC1"],"description":"Type of the board"},"ledPin":{"type":"string","description":"Pin address of the indicator LED"},"enableLed":{"type":"boolean","description":"Is the indicator LED enabled"},"ledInverted":{"type":"boolean","description":"Is the led inverted"},"batteryPin":{"type":"string","description":"Pin address of the battery indicator"},"batteryType":{"type":"string","enum":["BAT_EXTERNAL","BAT_INTERNAL","BAT_MCP3021","BAT_INTERNAL_MCP3021"],"description":"Type of battery"},"batteryResistances":{"type":"array","items":{"type":"number"},"minItems":3,"maxItems":3,"description":"Array of the different battery resistors, [indicator, SHIELD_R1, SHIELD_R2]"}},"required":["type","ledPin","enableLed","ledInverted","batteryPin","batteryType","batteryResistances"]},"CreateImuConfigDTO":{"type":"object","properties":{"type":{"type":"string","enum":["IMU_BNO085","IMU_MPU9250","IMU_MPU6500","IMU_BNO080","IMU_BNO055","IMU_BNO086","IMU_MPU6050","IMU_BMI160","IMU_ICM20948","IMU_BMI270","IMU_ICM42688","IMU_LSM6DS3TRC","IMU_LSM6DSV","IMU_LSM6DSO","IMU_LSM6DSR","IMU_MPU6050_SF","IMU_ICM45686","IMU_ICM45605"],"description":"Type of the imu"},"intPin":{"type":"string","nullable":true,"description":"Pin address of the imu int pin\nnot all imus use it"},"rotation":{"type":"number","description":"Rotation of the imu in degrees"},"sclPin":{"type":"string","description":"Pin address of the scl pin"},"sdaPin":{"type":"string","description":"Pin address of the sda pin"},"optional":{"type":"boolean","description":"Is this imu optionnal\nAllows for extensions to be unplugged"}},"required":["type","intPin","rotation","sclPin","sdaPin","optional"]},"VersionNotFoundExeption":{"type":"object","properties":{"cause":{},"name":{"type":"string"},"message":{"type":"string"},"stack":{"type":"string"}},"required":["cause","name","message"]},"Observable__type":{"type":"object","properties":{"source":{"$ref":"#/components/schemas/Observableany","deprecated":true},"operator":{"$ref":"#/components/schemas/Operatorany__type","deprecated":true}},"description":"A representation of any set of values over any amount of time. This is the most basic building block\nof RxJS."},"Observableany":{"type":"object","properties":{"source":{"$ref":"#/components/schemas/Observableany","deprecated":true},"operator":{"$ref":"#/components/schemas/Operatoranyany","deprecated":true}},"description":"A representation of any set of values over any amount of time. This is the most basic building block\nof RxJS."},"Operatoranyany":{"type":"object","properties":{},"description":"*"},"Operatorany__type":{"type":"object","properties":{},"description":"*"},"ReleaseDTO":{"type":"object","properties":{"id":{"type":"string","description":"id of the release, usually the commit id"},"url":{"type":"string","description":"url of the release"},"name":{"type":"string","description":"name of the release"},"zipball_url":{"type":"string","description":"url of the source archive"},"prerelease":{"type":"boolean","description":"Is this release a pre release"},"draft":{"type":"boolean","description":"Is this release a draft"}},"required":["id","url","name","zipball_url","prerelease","draft"]},"IMUDTO":{"type":"object","properties":{"type":{"type":"string","enum":["IMU_BNO085","IMU_MPU9250","IMU_MPU6500","IMU_BNO080","IMU_BNO055","IMU_BNO086","IMU_MPU6050","IMU_BMI160","IMU_ICM20948","IMU_BMI270","IMU_ICM42688","IMU_LSM6DS3TRC","IMU_LSM6DSV","IMU_LSM6DSO","IMU_LSM6DSR","IMU_MPU6050_SF","IMU_ICM45686","IMU_ICM45605"],"description":"Type of the imu"},"hasIntPin":{"type":"boolean","description":"Does that imu type require a int pin"},"imuStartAddress":{"type":"number","description":"First address of the imu"},"addressIncrement":{"type":"number","description":"Increment of the address for each new imus"}},"required":["type","hasIntPin","imuStartAddress","addressIncrement"]},"DefaultBuildConfigDTO":{"type":"object","properties":{"boardConfig":{"$ref":"#/components/schemas/CreateBoardConfigDTO","description":"Default config of the selected board\ncontains all the default pins information about the selected board"},"needBootPress":{"type":"boolean","description":"Inform the flashing utility that the user need to press the boot (or Flash) button\non the tracker"},"needManualReboot":{"type":"boolean","description":"Inform the flashing utility that the board will need a reboot after\nbeing flashed"},"shouldOnlyUseDefaults":{"type":"boolean","description":"Will use the default values and skip the customisation options"},"imuDefaults":{"type":"array","items":{"$ref":"#/components/schemas/IMUDefaultDTO"},"minItems":1,"description":"List of the possible imus pins, usually only two items will be sent"},"application_offset":{"type":"number","description":"Gives the offset of the firmare file in the eeprom. Used for flashing"}},"required":["boardConfig","imuDefaults","application_offset"]},"IMUDefaultDTO":{"type":"object","properties":{"type":{"type":"string","enum":["IMU_BNO085","IMU_MPU9250","IMU_MPU6500","IMU_BNO080","IMU_BNO055","IMU_BNO086","IMU_MPU6050","IMU_BMI160","IMU_ICM20948","IMU_BMI270","IMU_ICM42688","IMU_LSM6DS3TRC","IMU_LSM6DSV","IMU_LSM6DSO","IMU_LSM6DSR","IMU_MPU6050_SF","IMU_ICM45686","IMU_ICM45605"],"description":"Type of the imu"},"intPin":{"type":"string","nullable":true,"description":"Pin address of the imu int pin\nnot all imus use it"},"rotation":{"type":"number","description":"Rotation of the imu in degrees"},"sclPin":{"type":"string","description":"Pin address of the scl pin"},"sdaPin":{"type":"string","description":"Pin address of the sda pin"},"optional":{"type":"boolean","description":"Is this imu optionnal\nAllows for extensions to be unplugged"}},"required":["intPin","sclPin","sdaPin","optional"]},"BoardConfigDTO.Nullable":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique id of the board config, used for relations"},"type":{"type":"string","enum":["BOARD_SLIMEVR","BOARD_NODEMCU","BOARD_WROOM32","BOARD_WEMOSD1MINI","BOARD_TTGO_TBASE","BOARD_ESP01","BOARD_LOLIN_C3_MINI","BOARD_BEETLE32C3","BOARD_ESP32C3DEVKITM1","BOARD_WEMOSWROOM02","BOARD_XIAO_ESP32C3","BOARD_ESP32C6DEVKITC1"],"description":"Type of the board"},"ledPin":{"type":"string","description":"Pin address of the indicator LED"},"enableLed":{"type":"boolean","description":"Is the indicator LED enabled"},"ledInverted":{"type":"boolean","description":"Is the led inverted"},"batteryPin":{"type":"string","description":"Pin address of the battery indicator"},"batteryType":{"type":"string","enum":["BAT_EXTERNAL","BAT_INTERNAL","BAT_MCP3021","BAT_INTERNAL_MCP3021"],"description":"Type of battery"},"batteryResistances":{"type":"array","items":{"type":"number"},"minItems":3,"maxItems":3,"description":"Array of the different battery resistors, [indicator, SHIELD_R1, SHIELD_R2]"},"firmwareId":{"type":"string","format":"uuid","description":"Id of the linked firmware, used for relations"}},"required":["id","type","ledPin","enableLed","ledInverted","batteryPin","batteryType","batteryResistances","firmwareId"]},"FirmwareDetailDTO":{"type":"object","properties":{"boardConfig":{"$ref":"#/components/schemas/BoardConfigDTO.Nullable","description":"Pins informations about the board"},"imusConfig":{"type":"array","items":{"$ref":"#/components/schemas/ImuConfigDTO"},"minItems":1,"description":"List of the declared imus, and their pin configuration"},"firmwareFiles":{"type":"array","items":{"$ref":"#/components/schemas/FirmwareFileDTO"},"description":"List of the built files / partitions with their url and offsets"},"id":{"type":"string","format":"uuid","description":"UUID of the firmware"},"releaseId":{"type":"string","title":"Id of the firmware version used","description":"Id of the firmware version used.\nUsually the commit id of the source\nused to build the firmware"},"buildStatus":{"type":"string","enum":["CREATING_BUILD_FOLDER","DOWNLOADING_FIRMWARE","EXTRACTING_FIRMWARE","SETTING_UP_DEFINES","BUILDING","SAVING","DONE","ERROR"],"description":"Current status of the build\nthis value will change during the build\nprocess\n\nBUILDING -> DONE \\\\ the firmwrare is build and ready\n         -> FAILED  \\\\ the build failled and will be garbage collected"},"buildVersion":{"type":"string","description":"The repository and branch used as source of the firmware"},"createdAt":{"type":"string","description":"The date of creation of this firmware build","format":"date-time"}},"required":["boardConfig","imusConfig","firmwareFiles","id","releaseId","buildStatus","buildVersion","createdAt"]},"BoardConfigDTO":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique id of the board config, used for relations"},"type":{"type":"string","enum":["BOARD_SLIMEVR","BOARD_NODEMCU","BOARD_WROOM32","BOARD_WEMOSD1MINI","BOARD_TTGO_TBASE","BOARD_ESP01","BOARD_LOLIN_C3_MINI","BOARD_BEETLE32C3","BOARD_ESP32C3DEVKITM1","BOARD_WEMOSWROOM02","BOARD_XIAO_ESP32C3","BOARD_ESP32C6DEVKITC1"],"description":"Type of the board"},"ledPin":{"type":"string","description":"Pin address of the indicator LED"},"enableLed":{"type":"boolean","description":"Is the indicator LED enabled"},"ledInverted":{"type":"boolean","description":"Is the led inverted"},"batteryPin":{"type":"string","description":"Pin address of the battery indicator"},"batteryType":{"type":"string","enum":["BAT_EXTERNAL","BAT_INTERNAL","BAT_MCP3021","BAT_INTERNAL_MCP3021"],"description":"Type of battery"},"batteryResistances":{"type":"array","items":{"type":"number"},"minItems":3,"maxItems":3,"description":"Array of the different battery resistors, [indicator, SHIELD_R1, SHIELD_R2]"},"firmwareId":{"type":"string","format":"uuid","description":"Id of the linked firmware, used for relations"}},"required":["id","type","ledPin","enableLed","ledInverted","batteryPin","batteryType","batteryResistances","firmwareId"]},"ImuConfigDTO":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique id of the config\nthis probably will never be shown to the user as it is moslty use for relations"},"type":{"type":"string","enum":["IMU_BNO085","IMU_MPU9250","IMU_MPU6500","IMU_BNO080","IMU_BNO055","IMU_BNO086","IMU_MPU6050","IMU_BMI160","IMU_ICM20948","IMU_BMI270","IMU_ICM42688","IMU_LSM6DS3TRC","IMU_LSM6DSV","IMU_LSM6DSO","IMU_LSM6DSR","IMU_MPU6050_SF","IMU_ICM45686","IMU_ICM45605"],"description":"Type of the imu"},"rotation":{"type":"number","description":"Rotation of the imu in degrees"},"intPin":{"type":"string","nullable":true,"description":"Pin address of the imu int pin\nnot all imus use it"},"sclPin":{"type":"string","description":"Pin address of the scl pin"},"sdaPin":{"type":"string","description":"Pin address of the sda pin"},"optional":{"type":"boolean","description":"Is this imu optionnal\nAllows for extensions to be unplugged"},"firmwareId":{"type":"string","format":"uuid","description":"id of the linked firmware, used for relations"}},"required":["id","type","rotation","intPin","sclPin","sdaPin","optional","firmwareId"]},"HttpException":{"type":"object","properties":{"cause":{},"name":{"type":"string"},"message":{"type":"string"},"stack":{"type":"string"}},"required":["cause","name","message"],"description":"Defines the base Nest HTTP exception, which is handled by the default\nExceptions Handler."}}},"paths":{"/is-compatible/{version}":{"get":{"description":"Is this api compatible with the server version given","tags":["app"],"operationId":"getIsCompatible:version","parameters":[{"name":"version","in":"path","schema":{"type":"string"},"required":true}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VerionCheckResponse"}}}}}}},"/firmwares":{"get":{"description":"List all the built firmwares","tags":["firmware"],"operationId":"getFirmwares","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/FirmwareDTO"}}}}}}}},"/firmwares/build":{"post":{"description":"Build a firmware from the requested configuration","tags":["firmware"],"operationId":"postFirmwaresBuild","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateBuildFirmwareDTO"}}},"required":true},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BuildResponseDTO"}}}},"400":{"description":"Version not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VersionNotFoundExeption"}}}}}}},"/firmwares/build-status/{id}":{"get":{"description":"Get the build status of a firmware\nThis is a SSE (Server Sent Event)\nyou can use the web browser api to check for the build status and update the ui in real time","tags":["firmware"],"operationId":"getFirmwaresBuildStatus:id","parameters":[{"name":"id","in":"path","schema":{"type":"string"},"required":true}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Observable__type"}}}}}}},"/firmwares/boards":{"get":{"description":"List all the possible board types","tags":["firmware"],"operationId":"getFirmwaresBoards","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}}}}}},"/firmwares/versions":{"get":{"description":"List all the possible versions to build a firmware from","tags":["firmware"],"operationId":"getFirmwaresVersions","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ReleaseDTO"}}}}}}}},"/firmwares/imus":{"get":{"description":"List all the possible imus to use","tags":["firmware"],"operationId":"getFirmwaresImus","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/IMUDTO"}}}}}}}},"/firmwares/batteries":{"get":{"description":"List all the battery types","tags":["firmware"],"operationId":"getFirmwaresBatteries","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}}}}}},"/firmwares/default-config/{board}":{"get":{"description":"Gives the default pins / configuration of a given board","tags":["firmware"],"operationId":"getFirmwaresDefaultConfig:board","parameters":[{"name":"board","in":"path","schema":{"type":"string","enum":["BOARD_SLIMEVR","BOARD_NODEMCU","BOARD_WROOM32","BOARD_WEMOSD1MINI","BOARD_TTGO_TBASE","BOARD_ESP01","BOARD_LOLIN_C3_MINI","BOARD_BEETLE32C3","BOARD_ESP32C3DEVKITM1","BOARD_WEMOSWROOM02","BOARD_XIAO_ESP32C3","BOARD_ESP32C6DEVKITC1"]},"required":true}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DefaultBuildConfigDTO"}}}}}}},"/firmwares/{id}":{"get":{"description":"Get the inforamtions about a firmware from its id\nalso provide more informations than the simple list, like pins and imus and files","tags":["firmware"],"operationId":"getFirmwares:id","parameters":[{"name":"id","in":"path","schema":{"type":"string"},"required":true}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FirmwareDetailDTO"}}}},"404":{"description":"Firmware not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HttpException"}}}}}}},"/health":{"get":{"description":"Gives the status of the api\nthis endpoint will always return true","tags":["health"],"operationId":"getHealth","parameters":[],"responses":{"200":{"description":"Boolean, is the api healty or not","content":{"application/json":{"schema":{"type":"boolean"}}}}}}}},"tags":[{"name":"app"},{"name":"firmware"},{"name":"health"}]}